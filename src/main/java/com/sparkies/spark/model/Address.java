package com.sparkies.spark.model;

import javax.persistence.*;
import java.util.Set;

/**
 * Address Entity for SQL table 'ADRESSE'
 */
@Entity
@Inheritance(strategy = InheritanceType.JOINED)
@Table(name = "ADRESSE")
public class Address {

    /**
     * id : "id_adresse"
     * type : long
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_adresse", nullable = false)  // AutoIncremental
    private long idAdresse;

    /**
     * 'number' -> 'NUMERO'
     * Max length of 50 'car' (default) && NULLABLE = TRUE
     * (ex: parking can have an address without number)
     * _String for composed numbers, type '2Bis'
     */
    @Column(name = "NUMERO", length = 50)
    private String number;

    /**
     * 'road' -> 'RUE'
     * Max length of 100 'car' && not NULL
     */
    @Column(name = "RUE", length = 100, nullable = false)
    private String road;

    /**
     * 'postalCode' -> 'CODE_POSTAL'
     * int && not NULL
     * _Five digit for FR
     */
    @Column(name = "CODE_POSTAL", nullable = false)
    private int postalCode;

    /**
     * 'city' -> 'VILLE'
     * Max length of 100 'car' && not NULL
     */
    @Column(name = "VILLE", length = 100, nullable = false)
    private String city;

    /**
     * 'latitude' -> 'LATITUDE'
     * Float && NULLABLE = TRUE
     * (Unlike 'Parking' address, 'Users' address may not have GPS info)
     * _Generic format for latitude
     */
    @Column(name = "LATITUDE")
    private Double latitude;

    /**
     * 'longitude' -> 'LONGITUDE'
     * Float && NULLABLE = TRUE
     * (Unlike 'Parking' address, 'Users' address may not have GPS info)
     * _Generic format for latitude
     */
    @Column(name = "LONGITUDE")
    private Double longitude;

    /**
     * 'country' -> 'PAYS'
     * Max length of 255 'car' && not NULL
     * (
     */
    @Column(name = "PAYS", length = 255, nullable = false)
    private String country;

    /**
     * Map to 'Parking' Entity
     */
    @OneToOne(mappedBy = "parkingAddress")
    private Parking parking;

    /**
     * Map to 'User' Entity
     */
    @OneToMany(mappedBy = "personnalAddress")
    private Set<User> users;

    /**
     * Default constructor
     */
    public Address() {
        // TODO AUTOGENERATED

    }

    public long getId_adresse() {
        return idAdresse;
    }

    public void setId_adresse(long id_adresse) {
        this.idAdresse = id_adresse;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
    }

    public String getRoad() {
        return road;
    }

    public void setRoad(String road) {
        this.road = road;
    }

    public int getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(int postalCode) {
        this.postalCode = postalCode;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }
}
